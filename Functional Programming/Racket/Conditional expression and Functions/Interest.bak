;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname Interest) (read-case-sensitive #t) (teachpacks ((lib "convert.rkt" "teachpack" "htdp"))) (htdp-settings #(#t constructor repeating-decimal #f #t none #f ((lib "convert.rkt" "teachpack" "htdp")) #f)))
;; Author: RÃºben Costa
;; rubencosta@live.com

;; Exercise 4.4.1 in the book:
;; "HOW TO DESIGN PROGRAMS - An Introduction to Programming and Computing"
;; by M.Felleisen, R.B.Findler, M.Flatt, S.Krishnamurthi

;; This exercise is about conditional expressions, design of
;; programs for problems with diferent conditions

;; Problem 4.4.1: Develop the funtion interest. Like interest-rate, it
;; consumes a deposit amount. Instead of the rate, it produces the actual
;; amount of interest that the money earns in a year. The bank pays a flat
;; 4% for deposits of up to $1,000, a flat 4.5% per year for deposits of
;; up to $5,000, and a flat 5% for deposits of more than $5,000.

;; interest: number -> number
;; To calculate the amount of interest generated
;; in a year according to the deposited amount
;; Example: (= (interest 1000) 1040)
(define (interest amount)
  (cond
    [(<= amount 1000) (+ amount (* amount 0.04))]
    [(<= amount 5000) (+ amount (* amount 0.045))]
    [else (+ amount (* amount 0.05))]
  ))

;; Tests
(check-expect (interest 0) 40)
(check-expect (interest 1000) 1040)
(check-expect (interest 5000) 5225)
(check-expect (interest 10000) 10500)